{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "candidate",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "fullName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "bio",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "website",
						"type": "string"
					}
				],
				"name": "CandidateRegistered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address[]",
						"name": "candidateList",
						"type": "address[]"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "firstLeader",
						"type": "address"
					}
				],
				"name": "ElectionResults",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "newLeader",
						"type": "address"
					}
				],
				"name": "LeadershipChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "voter",
						"type": "address"
					}
				],
				"name": "VoteCast",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address[10]",
						"name": "voter",
						"type": "address[10]"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "addedVoterCount",
						"type": "uint256"
					}
				],
				"name": "VoterAdded",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "CAMPAIGN_DURATION",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "LEAD_PERIOD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "LeaderAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "LeaderId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "N_MEMBERS",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "RANDOM_VOTERS",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "REG_FEE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "RegistrationEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[10]",
						"name": "voterAddresses",
						"type": "address[10]"
					},
					{
						"internalType": "bytes32[10]",
						"name": "voterHashes",
						"type": "bytes32[10]"
					}
				],
				"name": "addVoter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "addedVoterCount",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "candidateInfo",
				"outputs": [
					{
						"internalType": "string",
						"name": "fullName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "bio",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "website",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "registeredAt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "voteCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "memberID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "leaderAt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "activeProposal",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "submittedDraft",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "candidateList",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "changeLeader",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "electionEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "candidateID",
						"type": "uint256"
					}
				],
				"name": "getCandidateInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "fullName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "bio",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "website",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "registeredAt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "voteCount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "memberID",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "leaderAt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "activeProposal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "submittedDraft",
								"type": "uint256"
							}
						],
						"internalType": "struct Candidate",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCurrentPhase",
				"outputs": [
					{
						"internalType": "enum Phase",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getElectionResults",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "voterHash",
						"type": "bytes32"
					}
				],
				"name": "getHashStatus",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "voterAddress",
						"type": "address"
					}
				],
				"name": "getVoteTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "membersElected",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "neutral",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "proposals",
				"outputs": [
					{
						"internalType": "address",
						"name": "proposer",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "provisions",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "proposedAt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "executedAt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "withdrawnAt",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "yesVotes",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "referendumEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_fullName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_bio",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_website",
						"type": "string"
					}
				],
				"name": "registerAsCandidate",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_candidatesIds",
						"type": "uint256[]"
					}
				],
				"name": "voteCandidates",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addVoter(address[10],bytes32[10])": {
					"params": {
						"voterAddresses": ": Wallet addresses of the randomly selected voters ",
						"voterHashes": ": Hash of yearOfBirth(yyyy)+monthOfBirth(mm)+gender(male=0,female=1) "
					}
				},
				"registerAsCandidate(string,string,string)": {
					"params": {
						"_bio": "Brief biography of the candidate (education, experience, etc.)",
						"_fullName": "Candidate's full name",
						"_website": "Website URL for the candidate"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addVoter(address[10],bytes32[10])": {
					"notice": "Neutral: Verify that (1957 <= yearOfBirth <= 2006).   Neutral: Calculate hash offchain in frontend:  Example JavaScript Code:  const crypto = require('crypto');  const yearOfBirth = 1995; // Before 2006  const monthOfBirth = 6; // June const gender = 1; // Female if (yearOfBirth > 2006) {  throw new Error(\"Must be born in or before 2006\"); }  const input = String(yearOfBirth) + String(monthOfBirth).padStart(2, '0') + String(gender); console.log(input); // \"2006061\" const hash = crypto.createHash('sha256').update(input).digest('hex');  console.log(\"Hash:\", hash);"
				},
				"registerAsCandidate(string,string,string)": {
					"notice": "Register as a candidate with required information"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"SmartConstitution.sol": "Formation"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"SmartConstitution.sol": {
			"keccak256": "0x89affe4bed7573f544d074e1a6c68312ed1ec22ef569cde78ed19ed45929d3bd",
			"license": "MIT",
			"urls": [
				"bzz-raw://85e7d93308b2d9fe200111d25f4a4731e9401eee78b9dea72f8c3fb21db97195",
				"dweb:/ipfs/QmfRjKU8qxJJgh4hpQfrGk7daephP4WgqWaJhW4BSvankh"
			]
		}
	},
	"version": 1
}